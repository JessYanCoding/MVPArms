apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    //配置keystore签名
    signingConfigs {
        release {
            keyAlias 'bealinks'
            keyPassword 'lzxxkj99'
            storeFile file('../bealinksStore.keystore')
            storePassword 'lzxxkj99'
        }
    }


    defaultConfig {
        applicationId "me.jessyan.mvparms.demo"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }
    buildTypes {

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }

}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}




dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //tools
    provided rootProject.ext.dependencies["javax.annotation"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    //view
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    compile rootProject.ext.dependencies["paginate"]
    //arms
    compile(project(':arms')) {
        exclude module: 'logutils'
    }
    //test
    testCompile rootProject.ext.dependencies["junit"]
    debugCompile rootProject.ext.dependencies["canary-debug"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    testCompile rootProject.ext.dependencies["canary-release"]
    debugCompile rootProject.ext.dependencies["recovery-debug"]
    releaseCompile rootProject.ext.dependencies["recovery-release"]
    debugCompile rootProject.ext.dependencies["logutils-debug"]
    releaseCompile rootProject.ext.dependencies["logutils-release"]
}
